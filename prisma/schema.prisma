// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Category {
  id            Int             @id @default(autoincrement())
  name          String
  description   String?
  slug          String          @unique
  icon          String?         // Icon name for UI
  color         String?         // Color theme for UI
  certifications Certification[]
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
}

model Certification {
  id            Int       @id @default(autoincrement())
  name          String
  description   String?
  slug          String    @unique
  level         String?   // Associate, Professional, Specialty, etc.
  duration      Int?      // Exam duration in minutes
  questionsCount Int?     // Number of questions in the exam
  category      Category  @relation(fields: [categoryId], references: [id])
  categoryId    Int
  questions     Question[]
  isActive      Boolean   @default(true)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Question {
  id              Int           @id @default(autoincrement())
  text            String
  explanation     String?
  points          Int           @default(1)
  certification   Certification @relation(fields: [certificationId], references: [id])
  certificationId Int
  answers         Answer[]
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
}

model Answer {
  id         Int      @id @default(autoincrement())
  text       String
  isCorrect  Boolean
  question   Question @relation(fields: [questionId], references: [id], onDelete: Cascade)
  questionId Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}
