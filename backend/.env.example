# Database (for Docker Compose setup)
DATABASE_URL="postgresql://postgres:postgres@db:5432/exam_center"

# For local development without Docker Compose:
# DATABASE_URL="postgresql://postgres:postgres@localhost:5432/exam_center"

# Google OAuth Configuration
GOOGLE_CLIENT_ID="your-google-client-id"
GOOGLE_CLIENT_SECRET="your-google-client-secret"

# Next.js / NextAuth Configuration
NEXTAUTH_URL="http://localhost:3000"
# If USE_SECRET_MANAGER is false, provide NEXTAUTH_SECRET here
NEXTAUTH_SECRET="your-32-character-or-longer-secret-key"

# AWS Configuration
AWS_REGION="us-east-1"
AWS_ACCESS_KEY_ID="your-aws-access-key-id"
AWS_SECRET_ACCESS_KEY="your-aws-secret-access-key"

# Secret Manager Configuration
# Set to "true" to enable Secret Manager (only works in production)
USE_SECRET_MANAGER="false"
# Name of the secret in AWS Secret Manager
NEXTAUTH_SECRET_NAME="exam-center/nextauth-secret"

# Application Environment
NODE_ENV="development"

# Instructions for AWS Secret Manager:
# 1. Secret Manager is ONLY used when NODE_ENV="production" AND USE_SECRET_MANAGER="true"
# 2. In development/test environments, NEXTAUTH_SECRET must be provided as environment variable
# 3. Create a secret in AWS Secret Manager with the name specified in NEXTAUTH_SECRET_NAME
# 4. The secret can be either:
#    - A simple string value (the NextAuth secret directly)
#    - A JSON object like: {"NEXTAUTH_SECRET": "your-secret-value"}
# 5. Ensure your AWS credentials are configured (via AWS_ACCESS_KEY_ID/AWS_SECRET_ACCESS_KEY or IAM roles)
