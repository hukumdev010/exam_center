"""AWS Solutions Architect Professional Certification"""

CERTIFICATION = {
    "name": "AWS Certified Solutions Architect - Professional",
    "description": "Advanced architectural knowledge for complex AWS solutions",
    "slug": "aws-solutions-architect-professional",
    "level": "Professional",
    "duration": 174,
    "questions_count": 58,
    "category_slug": "aws",
    "is_active": True,
}

QUESTIONS = [
    {
        "text": "Which AWS service provides automated backup and disaster recovery for on-premises workloads?",
        "explanation": "AWS DataSync with AWS Storage Gateway provides comprehensive backup and disaster recovery solutions for hybrid architectures.",
        "reference": "https://docs.aws.amazon.com/datasync/",
        "points": 1,
        "answers": [
            {"text": "AWS DataSync", "is_correct": True},
            {"text": "AWS Direct Connect", "is_correct": False},
            {"text": "AWS Site-to-Site VPN", "is_correct": False},
            {"text": "AWS Transit Gateway", "is_correct": False},
        ],
    },
    {
        "text": "In a multi-account strategy, which service provides centralized billing and account management?",
        "explanation": "AWS Organizations provides centralized management of multiple AWS accounts, including consolidated billing, service control policies, and organizational units.",
        "reference": "https://docs.aws.amazon.com/organizations/",
        "points": 1,
        "answers": [
            {"text": "AWS Organizations", "is_correct": True},
            {"text": "AWS Control Tower", "is_correct": False},
            {"text": "AWS SSO", "is_correct": False},
            {"text": "AWS Cost Explorer", "is_correct": False},
        ],
    },
    {
        "text": "Which design pattern provides the highest availability for a critical database workload?",
        "explanation": "Multi-AZ deployment with cross-region read replicas provides the highest availability, allowing for automatic failover within a region and disaster recovery across regions.",
        "reference": "https://docs.aws.amazon.com/rds/latest/userguide/Concepts.MultiAZ.html",
        "points": 1,
        "answers": [
            {
                "text": "Multi-AZ deployment with cross-region read replicas",
                "is_correct": True,
            },
            {"text": "Single AZ with automated backups", "is_correct": False},
            {"text": "Multi-AZ deployment only", "is_correct": False},
            {"text": "Cross-region deployment only", "is_correct": False},
        ],
    },
    {
        "text": "What is the most cost-effective strategy for long-term data archival with occasional access requirements?",
        "explanation": "S3 Intelligent-Tiering automatically moves objects between access tiers based on access patterns, optimizing costs while maintaining availability for occasional access.",
        "reference": "https://docs.aws.amazon.com/s3/latest/userguide/intelligent-tiering.html",
        "points": 1,
        "answers": [
            {
                "text": "S3 Intelligent-Tiering with Glacier Deep Archive",
                "is_correct": True,
            },
            {"text": "S3 Standard only", "is_correct": False},
            {"text": "S3 Glacier only", "is_correct": False},
            {"text": "EBS snapshots", "is_correct": False},
        ],
    },
    {
        "text": "Which networking solution provides the lowest latency for on-premises to AWS connectivity?",
        "explanation": "AWS Direct Connect provides dedicated network connections with consistent bandwidth and lower latency compared to internet-based connections.",
        "reference": "https://docs.aws.amazon.com/directconnect/latest/userguide/Welcome.html",
        "points": 1,
        "answers": [
            {"text": "AWS Direct Connect", "is_correct": True},
            {"text": "Site-to-Site VPN", "is_correct": False},
            {"text": "AWS PrivateLink", "is_correct": False},
            {"text": "Internet Gateway", "is_correct": False},
        ],
    },
    {
        "text": "What is the recommended approach for managing secrets in a microservices architecture?",
        "explanation": "AWS Secrets Manager provides automatic rotation, fine-grained access control, and audit capabilities essential for microservices architectures.",
        "reference": "https://docs.aws.amazon.com/secretsmanager/latest/userguide/intro.html",
        "points": 1,
        "answers": [
            {"text": "AWS Secrets Manager with automatic rotation", "is_correct": True},
            {"text": "Environment variables", "is_correct": False},
            {"text": "Hard-coded credentials", "is_correct": False},
            {"text": "Configuration files", "is_correct": False},
        ],
    },
    {
        "text": "Which caching strategy provides the best performance for read-heavy database workloads?",
        "explanation": "Write-through caching with ElastiCache ensures data consistency while providing fast read performance by keeping the cache synchronized with the database.",
        "reference": "https://docs.aws.amazon.com/elasticache/latest/mem-ug/Strategies.html",
        "points": 1,
        "answers": [
            {"text": "Write-through caching with ElastiCache", "is_correct": True},
            {"text": "Write-behind caching only", "is_correct": False},
            {"text": "Cache-aside pattern only", "is_correct": False},
            {"text": "No caching", "is_correct": False},
        ],
    },
    {
        "text": "What is the most secure way to allow cross-account access to S3 buckets?",
        "explanation": "Cross-account IAM roles provide secure, temporary access without sharing long-term credentials, following the principle of least privilege.",
        "reference": "https://docs.aws.amazon.com/IAM/latest/UserGuide/tutorial_cross-account-with-roles.html",
        "points": 1,
        "answers": [
            {"text": "Cross-account IAM roles", "is_correct": True},
            {"text": "Shared IAM users", "is_correct": False},
            {"text": "Bucket policies only", "is_correct": False},
            {"text": "Access keys sharing", "is_correct": False},
        ],
    },
    {
        "text": "Which solution provides the best disaster recovery for mission-critical applications?",
        "explanation": "Pilot light with automated failover provides a balance of cost and recovery time, maintaining critical components in a secondary region with automation for quick scaling.",
        "reference": "https://docs.aws.amazon.com/whitepapers/latest/disaster-recovery-workloads-on-aws/disaster-recovery-options-in-the-cloud.html",
        "points": 1,
        "answers": [
            {"text": "Pilot light with automated failover", "is_correct": True},
            {"text": "Backup and restore only", "is_correct": False},
            {"text": "Cold standby", "is_correct": False},
            {"text": "No disaster recovery", "is_correct": False},
        ],
    },
    {
        "text": "What is the most efficient way to process large datasets in near real-time?",
        "explanation": "Amazon Kinesis Data Analytics with Apache Flink provides powerful stream processing capabilities for real-time analytics on large datasets.",
        "reference": "https://docs.aws.amazon.com/kinesisanalytics/latest/java/what-is.html",
        "points": 1,
        "answers": [
            {"text": "Kinesis Data Analytics with Apache Flink", "is_correct": True},
            {"text": "Lambda functions only", "is_correct": False},
            {"text": "EMR batch processing", "is_correct": False},
            {"text": "Athena queries", "is_correct": False},
        ],
    },
    {
        "text": "Which approach ensures the highest security for container deployments?",
        "explanation": "AWS Fargate with ECS provides serverless container execution with built-in security isolation, removing the need to manage underlying EC2 instances.",
        "reference": "https://docs.aws.amazon.com/AmazonECS/latest/userguide/AWS_Fargate.html",
        "points": 1,
        "answers": [
            {"text": "AWS Fargate with ECS and security scanning", "is_correct": True},
            {"text": "EC2 instances with Docker", "is_correct": False},
            {"text": "Lambda containers only", "is_correct": False},
            {"text": "On-premises containers", "is_correct": False},
        ],
    },
    {
        "text": "What is the recommended pattern for handling API rate limiting in distributed systems?",
        "explanation": "Circuit breaker pattern with exponential backoff prevents cascade failures and allows systems to recover gracefully from rate limiting.",
        "reference": "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-request-throttling.html",
        "points": 1,
        "answers": [
            {
                "text": "Circuit breaker pattern with exponential backoff",
                "is_correct": True,
            },
            {"text": "Immediate retry", "is_correct": False},
            {"text": "Fixed delay retry", "is_correct": False},
            {"text": "No retry mechanism", "is_correct": False},
        ],
    },
    {
        "text": "Which database solution provides the best performance for IoT applications with time-series data?",
        "explanation": "Amazon Timestream is purpose-built for time-series data with automatic scaling, compression, and optimized query performance for IoT workloads.",
        "reference": "https://docs.aws.amazon.com/timestream/latest/developerguide/what-is-timestream.html",
        "points": 1,
        "answers": [
            {"text": "Amazon Timestream", "is_correct": True},
            {"text": "DynamoDB", "is_correct": False},
            {"text": "RDS MySQL", "is_correct": False},
            {"text": "Redshift", "is_correct": False},
        ],
    },
    {
        "text": "What is the most cost-effective approach for running batch workloads with variable demand?",
        "explanation": "AWS Batch with Spot Instances can reduce costs by up to 90% for fault-tolerant batch workloads by using spare EC2 capacity.",
        "reference": "https://docs.aws.amazon.com/batch/latest/userguide/spot_fleet_IAM_role.html",
        "points": 1,
        "answers": [
            {"text": "AWS Batch with Spot Instances", "is_correct": True},
            {"text": "On-Demand EC2 instances", "is_correct": False},
            {"text": "Reserved Instances only", "is_correct": False},
            {"text": "Lambda functions", "is_correct": False},
        ],
    },
    {
        "text": "Which solution provides the best observability for distributed microservices?",
        "explanation": "AWS X-Ray provides distributed tracing across microservices, allowing you to trace requests through your entire application stack.",
        "reference": "https://docs.aws.amazon.com/xray/latest/devguide/aws-xray.html",
        "points": 1,
        "answers": [
            {"text": "AWS X-Ray with CloudWatch Logs", "is_correct": True},
            {"text": "CloudWatch metrics only", "is_correct": False},
            {"text": "Application logs only", "is_correct": False},
            {"text": "No monitoring", "is_correct": False},
        ],
    },
    {
        "text": "What is the recommended approach for blue-green deployments in AWS?",
        "explanation": "CodeDeploy with Auto Scaling Groups enables blue-green deployments with automatic traffic shifting and rollback capabilities.",
        "reference": "https://docs.aws.amazon.com/codedeploy/latest/userguide/applications-create-blue-green.html",
        "points": 1,
        "answers": [
            {"text": "CodeDeploy with Auto Scaling Groups", "is_correct": True},
            {"text": "Manual EC2 instance replacement", "is_correct": False},
            {"text": "Lambda aliases only", "is_correct": False},
            {"text": "ECS service updates", "is_correct": False},
        ],
    },
    {
        "text": "Which storage solution provides the best performance for high-IOPS database workloads?",
        "explanation": "EBS Provisioned IOPS SSD (io2) volumes provide consistent, high IOPS performance required for demanding database workloads.",
        "reference": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-volume-types.html",
        "points": 1,
        "answers": [
            {"text": "EBS Provisioned IOPS SSD (io2)", "is_correct": True},
            {"text": "EBS General Purpose SSD (gp3)", "is_correct": False},
            {"text": "EFS", "is_correct": False},
            {"text": "S3", "is_correct": False},
        ],
    },
    {
        "text": "What is the best practice for implementing CI/CD pipelines in AWS?",
        "explanation": "CodePipeline with CodeBuild and CodeDeploy provides a complete CI/CD solution with integration across AWS services and third-party tools.",
        "reference": "https://docs.aws.amazon.com/codepipeline/latest/userguide/welcome.html",
        "points": 1,
        "answers": [
            {"text": "CodePipeline with CodeBuild and CodeDeploy", "is_correct": True},
            {"text": "Jenkins on EC2 only", "is_correct": False},
            {"text": "Manual deployments", "is_correct": False},
            {"text": "GitLab CI only", "is_correct": False},
        ],
    },
    {
        "text": "Which solution provides the most scalable event-driven architecture?",
        "explanation": "EventBridge with Lambda provides a serverless, scalable event-driven architecture that can handle millions of events with automatic scaling.",
        "reference": "https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-what-is.html",
        "points": 1,
        "answers": [
            {"text": "EventBridge with Lambda", "is_correct": True},
            {"text": "SQS with EC2", "is_correct": False},
            {"text": "SNS only", "is_correct": False},
            {"text": "Kinesis Data Streams", "is_correct": False},
        ],
    },
    {
        "text": "What is the recommended approach for managing infrastructure across multiple environments?",
        "explanation": "CloudFormation with StackSets enables you to deploy and manage CloudFormation stacks across multiple accounts and regions from a single operation.",
        "reference": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/what-is-cfnstacksets.html",
        "points": 1,
        "answers": [
            {"text": "CloudFormation with StackSets", "is_correct": True},
            {"text": "Manual resource creation", "is_correct": False},
            {"text": "Terraform only", "is_correct": False},
            {"text": "AWS CLI scripts", "is_correct": False},
        ],
    },
    {
        "text": "Which solution provides the best performance for real-time analytics on streaming data?",
        "explanation": "Kinesis Data Analytics with Apache Flink provides low-latency stream processing with complex event processing capabilities.",
        "reference": "https://docs.aws.amazon.com/kinesisanalytics/latest/java/how-it-works.html",
        "points": 1,
        "answers": [
            {"text": "Kinesis Data Analytics with Apache Flink", "is_correct": True},
            {"text": "Lambda with DynamoDB", "is_correct": False},
            {"text": "EMR with Spark Streaming", "is_correct": False},
            {"text": "Athena with S3", "is_correct": False},
        ],
    },
    {
        "text": "What is the most secure way to connect multiple VPCs across regions?",
        "explanation": "Transit Gateway with peering provides secure, scalable connectivity between VPCs across regions with centralized routing control.",
        "reference": "https://docs.aws.amazon.com/vpc/latest/tgw/tgw-peering.html",
        "points": 1,
        "answers": [
            {"text": "Transit Gateway with inter-region peering", "is_correct": True},
            {"text": "VPC Peering connections", "is_correct": False},
            {"text": "Site-to-Site VPN", "is_correct": False},
            {"text": "Direct Connect", "is_correct": False},
        ],
    },
    {
        "text": "Which approach provides the best compliance for financial services workloads?",
        "explanation": "AWS Control Tower with AWS Config provides automated compliance monitoring and governance across multiple accounts with pre-configured guardrails.",
        "reference": "https://docs.aws.amazon.com/controltower/latest/userguide/what-is-control-tower.html",
        "points": 1,
        "answers": [
            {"text": "AWS Control Tower with Config Rules", "is_correct": True},
            {"text": "Manual compliance checking", "is_correct": False},
            {"text": "CloudTrail only", "is_correct": False},
            {"text": "Third-party tools only", "is_correct": False},
        ],
    },
    {
        "text": "What is the recommended pattern for handling database connection pooling in serverless applications?",
        "explanation": "RDS Proxy provides connection pooling and management for serverless applications, reducing connection overhead and improving performance.",
        "reference": "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-proxy.html",
        "points": 1,
        "answers": [
            {"text": "RDS Proxy with Lambda", "is_correct": True},
            {"text": "Direct database connections", "is_correct": False},
            {"text": "Connection pooling in Lambda", "is_correct": False},
            {"text": "Multiple database instances", "is_correct": False},
        ],
    },
    {
        "text": "Which solution provides the best performance for machine learning inference at scale?",
        "explanation": "SageMaker Multi-Model Endpoints with auto-scaling provide cost-effective, high-performance inference for multiple models with automatic scaling.",
        "reference": "https://docs.aws.amazon.com/sagemaker/latest/dg/multi-model-endpoints.html",
        "points": 1,
        "answers": [
            {"text": "SageMaker Multi-Model Endpoints", "is_correct": True},
            {"text": "Lambda functions", "is_correct": False},
            {"text": "EC2 instances", "is_correct": False},
            {"text": "ECS containers", "is_correct": False},
        ],
    },
    {
        "text": "What is the most cost-effective approach for long-term log retention?",
        "explanation": "CloudWatch Logs with S3 export and Glacier Deep Archive provides cost-effective long-term storage while maintaining searchability for recent logs.",
        "reference": "https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/S3ExportTasks.html",
        "points": 1,
        "answers": [
            {
                "text": "CloudWatch Logs with S3 export to Glacier Deep Archive",
                "is_correct": True,
            },
            {"text": "CloudWatch Logs only", "is_correct": False},
            {"text": "EBS volumes", "is_correct": False},
            {"text": "Local storage", "is_correct": False},
        ],
    },
    {
        "text": "Which design pattern provides the best fault tolerance for distributed systems?",
        "explanation": "Circuit breaker with bulkhead isolation prevents cascade failures and isolates components to contain failures within specific boundaries.",
        "reference": "https://docs.aws.amazon.com/wellarchitected/latest/reliability-pillar/rel_mitigate_interaction_failure_implement_loose_coupling.html",
        "points": 1,
        "answers": [
            {"text": "Circuit breaker with bulkhead isolation", "is_correct": True},
            {"text": "Retry logic only", "is_correct": False},
            {"text": "Timeout configuration only", "is_correct": False},
            {"text": "No fault tolerance", "is_correct": False},
        ],
    },
    {
        "text": "What is the recommended approach for implementing zero-downtime database migrations?",
        "explanation": "DMS with read replicas allows for online database migration with minimal downtime by maintaining data synchronization during the migration process.",
        "reference": "https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Introduction.html",
        "points": 1,
        "answers": [
            {
                "text": "Database Migration Service (DMS) with read replicas",
                "is_correct": True,
            },
            {"text": "Manual backup and restore", "is_correct": False},
            {"text": "Application-level migration", "is_correct": False},
            {"text": "Downtime-based migration", "is_correct": False},
        ],
    },
    {
        "text": "Which solution provides the best performance for content delivery to global users?",
        "explanation": "CloudFront with Lambda@Edge provides global content delivery with edge computing capabilities for dynamic content customization.",
        "reference": "https://docs.aws.amazon.com/lambda/latest/dg/lambda-edge.html",
        "points": 1,
        "answers": [
            {"text": "CloudFront with Lambda@Edge", "is_correct": True},
            {"text": "S3 Transfer Acceleration only", "is_correct": False},
            {"text": "Multiple regional deployments", "is_correct": False},
            {"text": "Single region deployment", "is_correct": False},
        ],
    },
    {
        "text": "What is the most secure approach for API authentication in microservices?",
        "explanation": "API Gateway with Cognito User Pools provides OAuth 2.0/OpenID Connect authentication with fine-grained access control for microservices.",
        "reference": "https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-integrate-with-cognito.html",
        "points": 1,
        "answers": [
            {"text": "API Gateway with Cognito User Pools", "is_correct": True},
            {"text": "API keys only", "is_correct": False},
            {"text": "Basic authentication", "is_correct": False},
            {"text": "No authentication", "is_correct": False},
        ],
    },
    {
        "text": "Which approach provides the best data consistency in distributed transactions?",
        "explanation": "Step Functions with saga pattern provides orchestrated distributed transactions with compensation logic for handling failures.",
        "reference": "https://docs.aws.amazon.com/step-functions/latest/dg/concepts-standard-vs-express.html",
        "points": 1,
        "answers": [
            {"text": "Step Functions with saga pattern", "is_correct": True},
            {"text": "Two-phase commit", "is_correct": False},
            {"text": "Eventually consistent updates", "is_correct": False},
            {"text": "Single database transactions", "is_correct": False},
        ],
    },
    {
        "text": "What is the recommended pattern for handling large file uploads in web applications?",
        "explanation": "S3 presigned URLs with multipart upload provide secure, direct-to-S3 uploads without going through application servers, improving performance and reducing costs.",
        "reference": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/PresignedUrlUploadObject.html",
        "points": 1,
        "answers": [
            {"text": "S3 presigned URLs with multipart upload", "is_correct": True},
            {"text": "Application server upload", "is_correct": False},
            {"text": "Lambda function upload", "is_correct": False},
            {"text": "Direct database storage", "is_correct": False},
        ],
    },
    {
        "text": "Which solution provides the best performance for graph-based queries?",
        "explanation": "Amazon Neptune with Apache TinkerPop Gremlin provides optimized graph database performance for complex graph traversals and queries.",
        "reference": "https://docs.aws.amazon.com/neptune/latest/userguide/access-graph-gremlin.html",
        "points": 1,
        "answers": [
            {"text": "Amazon Neptune with Gremlin", "is_correct": True},
            {"text": "DynamoDB with GSI", "is_correct": False},
            {"text": "RDS with complex joins", "is_correct": False},
            {"text": "Elasticsearch", "is_correct": False},
        ],
    },
    {
        "text": "What is the most cost-effective approach for development and testing environments?",
        "explanation": "Auto Scaling with scheduled scaling allows you to automatically shut down development environments during off-hours, significantly reducing costs.",
        "reference": "https://docs.aws.amazon.com/autoscaling/ec2/userguide/schedule_time.html",
        "points": 1,
        "answers": [
            {"text": "Auto Scaling with scheduled policies", "is_correct": True},
            {"text": "Always-on instances", "is_correct": False},
            {"text": "Reserved Instances for dev/test", "is_correct": False},
            {"text": "On-premises infrastructure", "is_correct": False},
        ],
    },
    {
        "text": "Which approach provides the best security for multi-tenant SaaS applications?",
        "explanation": "Tenant isolation with separate IAM roles and resource tagging provides strong security boundaries while maintaining operational efficiency.",
        "reference": "https://docs.aws.amazon.com/wellarchitected/latest/saas-lens/tenant-isolation.html",
        "points": 1,
        "answers": [
            {
                "text": "Tenant isolation with IAM roles and resource tagging",
                "is_correct": True,
            },
            {"text": "Shared resources only", "is_correct": False},
            {"text": "Single database for all tenants", "is_correct": False},
            {"text": "No tenant separation", "is_correct": False},
        ],
    },
    {
        "text": "What is the recommended approach for implementing chaos engineering in AWS?",
        "explanation": "AWS Fault Injection Simulator provides controlled chaos engineering experiments to test system resilience and identify weaknesses.",
        "reference": "https://docs.aws.amazon.com/fis/latest/userguide/what-is.html",
        "points": 1,
        "answers": [
            {"text": "AWS Fault Injection Simulator", "is_correct": True},
            {"text": "Manual failure injection", "is_correct": False},
            {"text": "Third-party tools only", "is_correct": False},
            {"text": "No chaos engineering", "is_correct": False},
        ],
    },
    {
        "text": "Which solution provides the best performance for real-time bidding in ad-tech platforms?",
        "explanation": "DynamoDB with DynamoDB Accelerator (DAX) provides microsecond latency required for real-time bidding applications.",
        "reference": "https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/DAX.html",
        "points": 1,
        "answers": [
            {"text": "DynamoDB with DAX", "is_correct": True},
            {"text": "RDS with read replicas", "is_correct": False},
            {"text": "ElastiCache only", "is_correct": False},
            {"text": "S3 with CloudFront", "is_correct": False},
        ],
    },
    {
        "text": "What is the most efficient way to process and analyze large volumes of log data?",
        "explanation": "Kinesis Data Firehose with S3 and Athena provides a serverless pipeline for ingesting, storing, and analyzing large volumes of log data.",
        "reference": "https://docs.aws.amazon.com/kinesis/latest/dev/what-is-this-service.html",
        "points": 1,
        "answers": [
            {"text": "Kinesis Data Firehose with S3 and Athena", "is_correct": True},
            {"text": "EC2 with local processing", "is_correct": False},
            {"text": "Lambda with DynamoDB", "is_correct": False},
            {"text": "Manual log analysis", "is_correct": False},
        ],
    },
    {
        "text": "Which approach provides the best data governance for a data lake?",
        "explanation": "AWS Lake Formation provides comprehensive data governance with fine-grained access control, data cataloging, and security policies for data lakes.",
        "reference": "https://docs.aws.amazon.com/lake-formation/latest/dg/what-is-lake-formation.html",
        "points": 1,
        "answers": [
            {
                "text": "AWS Lake Formation with fine-grained access control",
                "is_correct": True,
            },
            {"text": "S3 bucket policies only", "is_correct": False},
            {"text": "IAM policies only", "is_correct": False},
            {"text": "No data governance", "is_correct": False},
        ],
    },
    {
        "text": "What is the recommended pattern for implementing event sourcing in AWS?",
        "explanation": "DynamoDB Streams with Lambda provides a scalable event sourcing implementation with automatic change capture and processing.",
        "reference": "https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Streams.html",
        "points": 1,
        "answers": [
            {"text": "DynamoDB Streams with Lambda", "is_correct": True},
            {"text": "S3 event notifications", "is_correct": False},
            {"text": "SQS with polling", "is_correct": False},
            {"text": "Manual event tracking", "is_correct": False},
        ],
    },
    {
        "text": "Which solution provides the best performance for high-frequency trading applications?",
        "explanation": "EC2 instances with SR-IOV and enhanced networking provide the lowest latency and highest network performance required for HFT applications.",
        "reference": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/enhanced-networking.html",
        "points": 1,
        "answers": [
            {"text": "EC2 with SR-IOV and enhanced networking", "is_correct": True},
            {"text": "Lambda functions", "is_correct": False},
            {"text": "Fargate containers", "is_correct": False},
            {"text": "Standard EC2 instances", "is_correct": False},
        ],
    },
    {
        "text": "What is the most secure approach for storing and accessing encryption keys?",
        "explanation": "AWS KMS with customer-managed keys provides hardware security modules (HSMs) for secure key generation, storage, and management with audit trails.",
        "reference": "https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html",
        "points": 1,
        "answers": [
            {"text": "AWS KMS with customer-managed keys", "is_correct": True},
            {"text": "Application-level key management", "is_correct": False},
            {"text": "Environment variables", "is_correct": False},
            {"text": "Configuration files", "is_correct": False},
        ],
    },
    {
        "text": "Which approach provides the best performance optimization for Lambda functions?",
        "explanation": "Provisioned concurrency with appropriate memory allocation eliminates cold starts and optimizes performance for latency-sensitive Lambda functions.",
        "reference": "https://docs.aws.amazon.com/lambda/latest/dg/provisioned-concurrency.html",
        "points": 1,
        "answers": [
            {
                "text": "Provisioned concurrency with memory optimization",
                "is_correct": True,
            },
            {"text": "Maximum memory allocation", "is_correct": False},
            {"text": "Minimum memory allocation", "is_correct": False},
            {"text": "Default configuration", "is_correct": False},
        ],
    },
    {
        "text": "What is the recommended approach for implementing distributed caching?",
        "explanation": "ElastiCache for Redis with cluster mode provides distributed caching with automatic failover and data partitioning across multiple nodes.",
        "reference": "https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Replication.Redis-RedisCluster.html",
        "points": 1,
        "answers": [
            {"text": "ElastiCache for Redis with cluster mode", "is_correct": True},
            {"text": "In-memory application cache", "is_correct": False},
            {"text": "Database query cache only", "is_correct": False},
            {"text": "File-based caching", "is_correct": False},
        ],
    },
    {
        "text": "Which solution provides the best approach for implementing CQRS (Command Query Responsibility Segregation)?",
        "explanation": "Separate DynamoDB tables for commands and queries with EventBridge for event propagation provides a scalable CQRS implementation.",
        "reference": "https://docs.aws.amazon.com/wellarchitected/latest/serverless-applications-lens/cqrs-and-event-sourcing.html",
        "points": 1,
        "answers": [
            {"text": "Separate DynamoDB tables with EventBridge", "is_correct": True},
            {"text": "Single database with views", "is_correct": False},
            {"text": "Multiple RDS instances", "is_correct": False},
            {"text": "No separation of concerns", "is_correct": False},
        ],
    },
    {
        "text": "What is the most cost-effective approach for processing large batch workloads with flexible timing?",
        "explanation": "AWS Batch with Spot Fleet can reduce costs by up to 90% for batch workloads that can tolerate interruptions and have flexible timing requirements.",
        "reference": "https://docs.aws.amazon.com/batch/latest/userguide/spot_fleet_IAM_role.html",
        "points": 1,
        "answers": [
            {"text": "AWS Batch with Spot Fleet", "is_correct": True},
            {"text": "On-Demand EC2 instances", "is_correct": False},
            {"text": "Reserved Instances", "is_correct": False},
            {"text": "Lambda functions", "is_correct": False},
        ],
    },
    {
        "text": "Which approach provides the best monitoring for containerized applications?",
        "explanation": "Container Insights with X-Ray provides comprehensive monitoring for containerized applications including performance metrics and distributed tracing.",
        "reference": "https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/ContainerInsights.html",
        "points": 1,
        "answers": [
            {"text": "Container Insights with X-Ray", "is_correct": True},
            {"text": "Application logs only", "is_correct": False},
            {"text": "Basic CloudWatch metrics", "is_correct": False},
            {"text": "No monitoring", "is_correct": False},
        ],
    },
    {
        "text": "What is the recommended pattern for implementing idempotency in distributed systems?",
        "explanation": "DynamoDB conditional writes with idempotency keys provide atomic operations to ensure exactly-once processing in distributed systems.",
        "reference": "https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/WorkingWithItems.html",
        "points": 1,
        "answers": [
            {
                "text": "DynamoDB conditional writes with idempotency keys",
                "is_correct": True,
            },
            {"text": "Application-level deduplication", "is_correct": False},
            {"text": "Database transactions only", "is_correct": False},
            {"text": "No idempotency measures", "is_correct": False},
        ],
    },
    {
        "text": "Which solution provides the best approach for implementing multi-region active-active architecture?",
        "explanation": "Route 53 health checks with DynamoDB Global Tables provide automated failover and data replication for multi-region active-active deployments.",
        "reference": "https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/GlobalTables.html",
        "points": 1,
        "answers": [
            {
                "text": "Route 53 health checks with DynamoDB Global Tables",
                "is_correct": True,
            },
            {"text": "Single region deployment", "is_correct": False},
            {"text": "Manual failover process", "is_correct": False},
            {"text": "Cross-region replication only", "is_correct": False},
        ],
    },
    {
        "text": "What is the most efficient way to handle millions of concurrent WebSocket connections?",
        "explanation": "API Gateway WebSocket APIs with Lambda provide serverless WebSocket support that automatically scales to handle millions of concurrent connections.",
        "reference": "https://docs.aws.amazon.com/apigateway/latest/developerguide/websocket-api.html",
        "points": 1,
        "answers": [
            {"text": "API Gateway WebSocket APIs with Lambda", "is_correct": True},
            {"text": "EC2 instances with WebSocket libraries", "is_correct": False},
            {"text": "ELB with sticky sessions", "is_correct": False},
            {"text": "Single server deployment", "is_correct": False},
        ],
    },
    {
        "text": "Which approach provides the best data consistency for financial transactions?",
        "explanation": "ACID transactions in Aurora with proper isolation levels provide the strongest consistency guarantees required for financial transactions.",
        "reference": "https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.AuroraMySQL.html",
        "points": 1,
        "answers": [
            {"text": "ACID transactions in Aurora", "is_correct": True},
            {"text": "Eventually consistent NoSQL", "is_correct": False},
            {"text": "In-memory transactions only", "is_correct": False},
            {"text": "File-based transactions", "is_correct": False},
        ],
    },
    {
        "text": "What is the recommended approach for implementing feature flags in microservices?",
        "explanation": "AWS AppConfig provides centralized feature flag management with real-time updates and gradual rollout capabilities for microservices.",
        "reference": "https://docs.aws.amazon.com/appconfig/latest/userguide/what-is-appconfig.html",
        "points": 1,
        "answers": [
            {"text": "AWS AppConfig with real-time updates", "is_correct": True},
            {"text": "Environment variables", "is_correct": False},
            {"text": "Database-stored flags", "is_correct": False},
            {"text": "Hard-coded feature switches", "is_correct": False},
        ],
    },
    {
        "text": "Which solution provides the best performance for real-time collaborative applications?",
        "explanation": "ElastiCache for Redis with pub/sub capabilities provides low-latency message broadcasting required for real-time collaborative features.",
        "reference": "https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/pubsub.html",
        "points": 1,
        "answers": [
            {"text": "ElastiCache for Redis with pub/sub", "is_correct": True},
            {"text": "SQS with polling", "is_correct": False},
            {"text": "SNS with HTTP endpoints", "is_correct": False},
            {"text": "Database polling", "is_correct": False},
        ],
    },
    {
        "text": "What is the most secure approach for implementing API rate limiting?",
        "explanation": "API Gateway with usage plans and API keys provides comprehensive rate limiting with authentication and fine-grained control over API access.",
        "reference": "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-api-usage-plans.html",
        "points": 1,
        "answers": [
            {"text": "API Gateway with usage plans and API keys", "is_correct": True},
            {"text": "Application-level rate limiting", "is_correct": False},
            {"text": "Load balancer rate limiting", "is_correct": False},
            {"text": "No rate limiting", "is_correct": False},
        ],
    },
    {
        "text": "Which approach provides the best data lake architecture for analytics?",
        "explanation": "S3 with Glue Data Catalog and Athena provides a serverless data lake architecture with schema-on-read capabilities and SQL query support.",
        "reference": "https://docs.aws.amazon.com/lake-formation/latest/dg/lake-formation-dg.pdf",
        "points": 1,
        "answers": [
            {"text": "S3 with Glue Data Catalog and Athena", "is_correct": True},
            {"text": "Redshift data warehouse only", "is_correct": False},
            {"text": "RDS with complex queries", "is_correct": False},
            {"text": "Local file storage", "is_correct": False},
        ],
    },
    {
        "text": "What is the recommended pattern for implementing saga orchestration in distributed transactions?",
        "explanation": "Step Functions with state machines provide reliable saga orchestration with built-in error handling and compensation logic for distributed transactions.",
        "reference": "https://docs.aws.amazon.com/step-functions/latest/dg/concepts-amazon-states-language.html",
        "points": 1,
        "answers": [
            {"text": "Step Functions with state machines", "is_correct": True},
            {"text": "Application-level orchestration", "is_correct": False},
            {"text": "Database-level coordination", "is_correct": False},
            {"text": "Manual transaction coordination", "is_correct": False},
        ],
    },
    {
        "text": "Which solution provides the best approach for implementing event replay capabilities?",
        "explanation": "Kinesis Data Streams with extended retention provides event replay capabilities by storing events for up to 365 days with configurable replay positions.",
        "reference": "https://docs.aws.amazon.com/kinesis/latest/dev/kinesis-extended-retention.html",
        "points": 1,
        "answers": [
            {
                "text": "Kinesis Data Streams with extended retention",
                "is_correct": True,
            },
            {"text": "SQS with DLQ", "is_correct": False},
            {"text": "SNS with message filtering", "is_correct": False},
            {"text": "Database event logs", "is_correct": False},
        ],
    },
    {
        "text": "What is the most cost-effective approach for disaster recovery with 4-hour RTO requirement?",
        "explanation": "Warm standby provides a balance between cost and recovery time, maintaining scaled-down versions of critical systems that can be quickly scaled up.",
        "reference": "https://docs.aws.amazon.com/whitepapers/latest/disaster-recovery-workloads-on-aws/disaster-recovery-options-in-the-cloud.html",
        "points": 1,
        "answers": [
            {"text": "Warm standby with automated scaling", "is_correct": True},
            {"text": "Hot standby (active-active)", "is_correct": False},
            {"text": "Cold standby", "is_correct": False},
            {"text": "Backup and restore only", "is_correct": False},
        ],
    },
]
